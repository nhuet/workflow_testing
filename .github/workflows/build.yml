name: Build workflow-testing

on:
  push:
    branches:
      - "**"
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  install-gym:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.7", "3.10" ]
        os: [ "ubuntu-latest", "macos-latest", "windows-latest" ]
        nodeellip: [false, true]
        exclude:
          - os: "windows-latest"
            nodeellip: true
          - os: "macos-latest"
            nodeellip: true
          - os: "ubuntu-latest"
            nodeellip: true
            python-version: 3.7




    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - run: echo ${{ matrix.nodeellip }}

      - name: Pick proper tox env
        shell: python
        run: |
          import os; import platform; import sys; from pathlib import Path
          platform_mapping = {
              "Linux": "linux",
              "Darwin": "macos",
              "Windows": "win",
          }
          pythonversion = f'py{"" if platform.python_implementation() == "CPython" else "py"}3{sys.version_info.minor}'
          platformversion=platform_mapping[platform.system()]
          toxenv = f"{pythonversion}-{platformversion}"
          if "${{ matrix.nodeellip }}" == "true":
              toxenv += "-nodeellip"
          set_toxenv_cmd = f"TOXENV={toxenv}"
          print(f"Picked: {toxenv}")
          with Path(os.environ["GITHUB_ENV"]).open("ta") as file_handler:
               file_handler.write(set_toxenv_cmd)
