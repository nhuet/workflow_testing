name: Build workflow-testing

on:
  push:
    branches:
      - "**"
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  job1:
    if: false
    runs-on: ubuntu-latest
    steps:
      - run: echo never called

  job2:
    if: false
    runs-on: ubuntu-latest
    steps:
      - run: echo never called

  job12:
    needs: [job1, job2]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo ${{ needs.job1.result }}
          echo ${{ needs.job2.result }}
          echo ${{ always() && contains(needs.*.result, 'success') }}


  job_for_tags_and_default:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
    steps:
      - name: Get doc version name
        run: |
          if [ ${GITHUB_REF} = refs/heads/${{ github.event.repository.default_branch }} ]; then
            VERSION=${{ github.event.repository.default_branch }}
          else
            VERSION=${GITHUB_REF/refs\/tags\/v/}  # stripping "refs/tags/v"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: test it
        run: echo $VERSION


  job_depending_on_skipped_test:
    runs-on: ubuntu-latest
    steps:
      - run: echo should not run

  job_only_on_default1:
    runs-on: ubuntu-latest
    if: $${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
    steps:
      - run: echo should work only on default
  job_only_on_default2:
    runs-on: ubuntu-latest
    if: ${{ github.ref }} == refs/heads/${{ github.event.repository.default_branch }}
    steps:
      - run: echo should work only on default 2
  job_only_on_default3:
    runs-on: ubuntu-latest
    if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
    steps:
      - run: echo should work only on default
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Install build dependencies
        run: pip install -U setuptools wheel
      - name: Update version number according to pushed tag
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          TAG_NAME=${GITHUB_REF/refs\/tags\//}  # stripping "refs/tags/"
          VERSION=${TAG_NAME/v/}  # stripping "v"
          echo $VERSION
          # Replace in-place version number in package __init__.py, also used by setup.py
          sed -i -e "s/^__version__\s*=.*$/__version__ = \"${VERSION}\"/g" workflow_testing/__init__.py
          cat workflow_testing/__init__.py
      - name: Build workflow_testing wheel
        run: python setup.py bdist_wheel
      - name: Upload as build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist/*.whl

  test:
    runs-on: windows-2022
    needs: [build]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Download wheels artifact
        uses: actions/download-artifact@v1.0.0
        with:
          name: wheels
      - name: install the library
        run: |
          python -m pip install wheels/workflow_testing*.whl
      - run: |
          chmod +x bin/hello
          cd ..
          minizinc_path=$(python -c "import workflow_testing, os; print(os.path.abspath(workflow_testing.__path__[0]))")
          cd -
          echo $minizinc_path
          cygpath --unix $minizinc_path
          minizinc_path=$(cygpath --unix $minizinc_path)
          echo $minizinc_path
          mv bin/hello $minizinc_path
          ls $minizinc_path
          export PATH=$minizinc_path:$PATH
          echo $PATH
          hello
