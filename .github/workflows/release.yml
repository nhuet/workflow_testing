# This is a basic workflow to help you get started with Actions

name: Release

# Controls when the workflow will run
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  create-binder-env:
    runs-on: ubuntu-latest
    steps:
      - name: Get scikit-decide release version and define new binder env tag
        run: |
          TAG_NAME=${GITHUB_REF/refs\/tags\//}  # stripping "refs/tags/"
          SKDECIDE_VERSION=${TAG_NAME/v/}  # stripping "v"
          BINDER_TAG=binder_${TAG_NAME}
          echo "BINDER_TAG=${BINDER_TAG}" >> $GITHUB_ENV
          echo "SKDECIDE_VERSION=${SKDECIDE_VERSION}" >> $GITHUB_ENV
          echo "DOCS_VERSION_PATH=/version/$SKDECIDE_VERSION/" >> $GITHUB_ENV

      # Checks-out current branch
      - uses: actions/checkout@v2

      - name: Deploy ðŸš€
          uses: JamesIves/github-pages-deploy-action@4.1.5
          with:
            branch: gh-pages # The branch the action should deploy to.
            folder: doc # The folder the action should deploy.
            target-folder: ${{ env.DOCS_VERSION_PATH }} # The folder the action should deploy to.
            commit-message: publish documentation for release ${{ env.SKDECIDE_VERSION }}
            clean: false # Releasing a new version is about creating a new directory, so we don't want to clean up the root.

  build-docs:
    runs-on: ubuntu-latest
    env:
      DOCS_VERSION_PATH: /

    steps:
      - name: Set env variables for github+binder links in doc
        run: |
          TAG_NAME=${GITHUB_REF/refs\/tags\//}  # stripping "refs/tags/"
          BINDER_TAG=binder_${TAG_NAME}
          echo "AUTODOC_BINDER_ENV_GH_REPO_NAME=airbus/scikit-decide" >> $GITHUB_ENV
          echo "AUTODOC_BINDER_ENV_GH_BRANCH=${BINDER_TAG}" >> $GITHUB_ENV
          echo "AUTODOC_NOTEBOOKS_REPO_URL=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}" >> $GITHUB_ENV
          echo "AUTODOC_NOTEBOOKS_BRANCH=${TAG_NAME}" >> $GITHUB_ENV

      - name: read binder env
        run: |
          echo ${AUTODOC_BINDER_ENV_GH_REPO_NAME}
          echo ${AUTODOC_BINDER_ENV_GH_BRANCH}
          echo ${AUTODOC_NOTEBOOKS_REPO_URL}
          echo ${AUTODOC_NOTEBOOKS_BRANCH}
